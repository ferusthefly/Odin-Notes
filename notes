Notes 


-for multipule classes use class="first-class second-class" for HTML and .first-class, .second-class {} for CSS


-to center without flex try text-align center


-CSS Syntax
	Selector	Declaration 
	h1		{color:blue;}
			property value

-How to clone a repository 
	
	Click code on the github repository you wish to clone
	
	Copy the HTTPS

	open the terminal in the desired directory

	type 
	git clone (paste copied HTTPS here) 

	Press enter

-A web safe font means that it is intsalled on virtually every computer.

-Chrome Devtools 
control + shift + p opens up the command menu.

+ the debugger in the js console and the audit command seem to be very useful tools for when I'll get to that point.

-an example of a pseudostate is :hover. you can use the :hov button on the styles tab in chrome devtools to activate it.

-the computed tab in devtools will only show you the css that's actually being applied.

-margin colaspes between two elements

-box-sizing border-box (aka thealternative CSS box model) makes it so the height and width selectors apply to the whole instead of the content

-to conceptuialze the block and inline think about the two writing modes. the inline is the line in which the content flows while the block is how content is added. horizontal writing mode (english) will have a horizonal inline and a vertical block flow.

-an outer display type is block or inline (the default aka normal flow) while a inner display type in CSS is flex or grid

-changing the value of display can cause the outer to change from block to inline which canges how elements display alongside othr elements 

-margin collapsing is a thing, so if you're trying to make space with margins and it's not working, it might be the culprit.


-== tests to see if things match in abstract while === tests to see if things match in te literal e.g true and 1 match in abstract because 1 = true in js but in === it means a one to one exact comparisson which 1 is not true only 1 === 1 or true === true would pass as true. also of note Comparing two JavaScript objects always returns false.

you can't ++ -- (increment) to a number. it will only work with a variable. Also putting these before the variable will return with it exicuted while after it will show the current number and then go.

how is (/=) better than (/) ? because it changes what x is while doing the equation.

when calulating numbers and strings, things work differently with the + operator. this is because 'adding' strings and numbers smushes them together. eg '1' + 2 = 12. it goes left to right so if 2 + 2 + '9' the result would be 49.

unary is when the operator is alone. eg -1 or in the case of strings it can convert them to numbers. +true would be 1 while +false would be 0. or if you did 
let apples = "2";
let oranges = "3";
// both values converted to numbers before the binary plus
alert( +apples + +oranges ); // 5

unary operators have precedence over binary operators. Every operator has a corresponding precedence number. The one with the larger number executes first. If the precedence is the same, the execution order is from left to right.

in
let n = 2;
n *= 3 + 5;
the answer is 16 because of precedence. the + goes first, then the *= is aplied.
to make code more readable stick to the one action one line rule because One line doing multiple things is not good	

an empty string is converted to zero.

"\t \n" - 2 = -2 because the \ acts as some type of command that also negates it from the string so the srting becomes "" which as stated above empty strings are conveted to zero. so "" - 2 is 0 - 2 which is -2

an example of a ternary let accessAllowed = (age > 18) ? true : false; 

you can't have a semicolon ; after the condition in an else if otherwise it will run them all

example of a switch statment - switch (expression) {code to execute}


